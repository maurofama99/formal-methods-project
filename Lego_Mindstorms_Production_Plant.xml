<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int NUM_PIECES = 4; //non so se posso usare le #define
const int NUM_STATIONS = 3;
const int NUM_SENSORS = NUM_STATIONS*2;
const int NUM_SLOTS = 20;

typedef int[0, NUM_STATIONS-1] id_s;
typedef int[0, NUM_SENSORS-1] id_sen;

// dichiare la belt (array di bool)

chan move;

</declaration>
	<template>
		<name>Init</name>
		<declaration>void init(){
   
    bool belt[NUM_SLOTS]; //non se se mi inizializza tutto a zero, in caso for loop
    bool sensor_in[NUM_SLOTS];
    bool sensor_out[NUM_SLOTS];
    bool station[NUM_SLOTS];
    
    //mette i pezzi sulla belt
    for(int i = 0; i &lt; NUM_PIECES; i++){
        belt[i] = 1;
    }
    
}</declaration>
		<location id="id0" x="-229" y="-8">
			<committed/>
		</location>
		<location id="id1" x="-68" y="-8">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-170" y="-59">init!</label>
			<label kind="assignment" x="-170" y="-42">init()</label>
		</transition>
	</template>
	<template>
		<name>Controller</name>
		<declaration>int shift() { 

    int[0,4] temp = belt[NUM_SLOTS-1];
    for (int i = NUM_SLOTS-1; i &gt; 0; i--){
        next = i+1;
        if(!belt[next] &amp;&amp; !station[next] &amp;&amp; !sensor_in[next] &amp;&amp; !sensor_out[next]){
            belt[i] = belt[i-1];
        }else if(station[next]){
            
        }else if(sensor_in[next]){
           
        }else if(sensor_out[next]){

        }else continue;
    }    
    belt[0] = temp;
    return 0;
}</declaration>
		<location id="id2" x="-59" y="-17">
		</location>
		<location id="id3" x="-8" y="-170">
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-17" y="-102">init?</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-195" y="-51">move?</label>
			<label kind="assignment" x="-195" y="-34">shift()</label>
			<nail x="-119" y="-68"/>
			<nail x="-119" y="34"/>
		</transition>
	</template>
	<template>
		<name>Processing_Station</name>
		<parameter>const id_s id, const id_s prec_id</parameter>
		<declaration>//nelle dichiarazioni globali ci passiamo al processo della stazione l'id della stazione corrente e l'id della 
//precedente tramite i parameters
clock x;


void enqueue(){

}

void dequeue(){

}

void shift(){
    
} 

bool check_queue(){
}</declaration>
		<location id="id4" x="0" y="0">
			<name x="25" y="-17">free</name>
		</location>
		<location id="id5" x="-238" y="51">
			<name x="-246" y="68">wait</name>
		</location>
		<location id="id6" x="-255" y="-119">
			<name x="-289" y="-161">processing</name>
			<label kind="invariant" x="-331" y="-136">x &lt;= 20</label>
		</location>
		<location id="id7" x="68" y="-102">
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="42" y="-68">init?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-170" y="42">free_outsensor?</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-476" y="-25">check_queue() == 0 &amp;&amp; x &gt; 20</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="guard" x="-42" y="-230">check_queue()==1 &amp;&amp; x &gt; 20</label>
			<nail x="-59" y="-195"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="-187" y="-119">check_insensor()==1</label>
			<label kind="synchronisation" x="-187" y="-102">move?</label>
		</transition>
	</template>
	<template>
		<name x="9" y="9">Conveyor_Belt</name>
		<declaration>// Place local declarations here.
clock x;

// implementare la shift sull'array globale
</declaration>
		<location id="id8" x="-1343" y="-170">
			<name x="-1326" y="-212">conf1</name>
		</location>
		<location id="id9" x="-1122" y="-119">
			<name x="-1132" y="-153">conf2</name>
		</location>
		<location id="id10" x="-1368" y="-340">
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-1351" y="-297">init?</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-1232" y="-110">x&gt;3</label>
			<label kind="assignment" x="-1241" y="-93">x=0</label>
			<nail x="-1241" y="-59"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-994" y="-119">x&gt;=0 &amp;&amp; x&lt;=3</label>
			<label kind="synchronisation" x="-994" y="-102">move!</label>
			<label kind="assignment" x="-994" y="-85">x=0</label>
			<nail x="-1011" y="-127"/>
			<nail x="-1011" y="-34"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-1241" y="-178">x&gt;3</label>
			<label kind="assignment" x="-1241" y="-195">x=0</label>
			<nail x="-1266" y="-153"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="guard" x="-1615" y="-238">x&gt;=0 &amp;&amp; x&lt;=3</label>
			<label kind="synchronisation" x="-1589" y="-221">move!</label>
			<label kind="assignment" x="-1606" y="-204">x=0, shift()</label>
			<nail x="-1530" y="-161"/>
			<nail x="-1530" y="-212"/>
		</transition>
	</template>
	<template>
		<name>Sensor</name>
		<declaration>//free_sensor e approaching in triggherati da sensor</declaration>
		<location id="id11" x="0" y="0">
		</location>
		<location id="id12" x="-127" y="8">
			<name x="-137" y="-26">free</name>
		</location>
		<location id="id13" x="-134" y="119">
			<name x="-153" y="127">busy</name>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-68" y="-93">init?</label>
			<nail x="-136" y="-110"/>
			<nail x="-195" y="-51"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<nail x="-204" y="51"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-127" y="51">insensor!</label>
		</transition>
	</template>
	<system>/*station1 = Processing_Station(1);
station2 = Processing_Station(2);
station3 = Processing_Station(3);
in_sensor1 = Sensor(1);
out_sensor1 = Sensor(2);
in_sensor2 = Sensor(3);
out_sensor2 = Sensor(4);
in_sensor3 = Sensor(5);
out_sensor3 = Sensor(6);*/
controller = Controller();
belt = Conveyor_Belt();

system belt, controller;</system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
